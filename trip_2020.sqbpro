<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="trip_2020.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="100"/><column_width id="3" width="2698"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><table title="trip_data_2020" custom_title="0" dock_id="1" table="4,14:maintrip_data_2020"/><dock_state state="000000ff00000000fd00000001000000020000039e0000035afc0100000001fb000000160064006f0063006b00420072006f007700730065003101000000000000039e0000015c00ffffff0000039e0000000000000004000000040000000800000008fc00000000"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="trip_data_2020" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_" freeze_columns="0"><sort/><column_widths><column index="1" value="122"/><column index="2" value="98"/><column index="3" value="114"/><column index="4" value="114"/><column index="5" value="235"/><column index="6" value="113"/><column index="7" value="235"/><column index="8" value="106"/><column index="9" value="64"/><column index="10" value="68"/><column index="11" value="57"/><column index="12" value="61"/><column index="13" value="111"/><column index="14" value="155"/><column index="15" value="156"/><column index="16" value="66"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="SQL 2*">SELECT COUNT(*) FROM trip_data_2020;

SELECT * FROM trip_data_2020 LIMIT 10;

PRAGMA table_info(trip_data_2020);

DELETE FROM trip_data_2020 
WHERE started_at IS NULL OR ended_at IS NULL OR ride_id IS NULL OR member_casual IS NULL 
  OR trip_duration_seconds IS NULL;

DELETE FROM trip_data_2020 
WHERE rowid NOT IN (
    SELECT MIN(rowid) FROM trip_data_2020 GROUP BY ride_id
);

DELETE FROM trip_data_2020 WHERE trip_duration_seconds &lt;= 0;

UPDATE trip_data_2020
SET member_casual = LOWER(TRIM(member_casual));

UPDATE trip_data_2020
SET trip_duration_seconds = (julianday(ended_at) - julianday(started_at)) * 86400;

UPDATE trip_data_2020
SET ride_length_formatted = 
    CASE 
        WHEN trip_duration_seconds &gt; 0 THEN 
            printf('%02d:%02d:%02d', 
                   trip_duration_seconds / 3600,  
                   (trip_duration_seconds % 3600) / 60,  
                   trip_duration_seconds % 60)  
        ELSE 'Invalid Duration'  
    END;

UPDATE trip_data_2020 
SET ride_day = CASE 
    WHEN strftime('%w', started_at) = '0' THEN 'Sunday'
    WHEN strftime('%w', started_at) = '1' THEN 'Monday'
    WHEN strftime('%w', started_at) = '2' THEN 'Tuesday'
    WHEN strftime('%w', started_at) = '3' THEN 'Wednesday'
    WHEN strftime('%w', started_at) = '4' THEN 'Thursday'
    WHEN strftime('%w', started_at) = '5' THEN 'Friday'
    WHEN strftime('%w', started_at) = '6' THEN 'Saturday'
END;

SELECT member_casual, 
       COUNT(*) AS total_rides,
       AVG(trip_duration_seconds) / 60 AS avg_ride_length_min,  
       MIN(ride_length_formatted) AS shortest_ride,
       MAX(ride_length_formatted) AS longest_ride
FROM trip_data_2020
GROUP BY member_casual;

SELECT strftime('%H', started_at) AS hour, 
       member_casual, 
       COUNT(*) AS rides
FROM trip_data_2020
GROUP BY hour, member_casual
ORDER BY hour ASC;

SELECT ride_day, member_casual, COUNT(*) AS ride_count
FROM trip_data_2020
GROUP BY ride_day, member_casual
ORDER BY ride_day;

SELECT start_station_name, COUNT(*) AS ride_count
FROM trip_data_2020
GROUP BY start_station_name
ORDER BY ride_count DESC
LIMIT 10;

SELECT start_station_name, end_station_name, member_casual, COUNT(*) AS ride_count
FROM trip_data_2020
GROUP BY start_station_name, end_station_name, member_casual
ORDER BY ride_count DESC
LIMIT 10;

SELECT member_casual,
       SUM(CASE WHEN trip_duration_seconds &gt; 1800 THEN 1 ELSE 0 END) * 100.0 / COUNT(*) AS long_ride_percentage
FROM trip_data_2020
GROUP BY member_casual;

SELECT * FROM trip_data_2020;
</sql><current_tab id="0"/></tab_sql></sqlb_project>
